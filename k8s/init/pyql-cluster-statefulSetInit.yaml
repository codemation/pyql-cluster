apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pyql-cluster
spec:
  selector:
    matchLabels:
      app: pyql-cluster # has to match .spec.template.metadata.labels
  serviceName: "pyql-cluster"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: pyql-cluster # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: pyql-cluster
        image: joshjamison/pyql-cluster:alpha0.039
        envFrom:
          - configMapRef:
              name: pyql-cluster-config
          - secretRef:
              name: pyql-cluster-init-auth
        env:
          - name: PYQL_CLUSTER_ACTION
            value: init
          - name: PYQL_TYPE
            value: K8S
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          httpGet:
            path: /cluster/pyql/ready
            port: 80
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: pyql-cluster-db
          mountPath: /mnt/pyql-cluster
  volumeClaimTemplates:
  - metadata:
      name: pyql-cluster-db
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "pyql-pv-manual-sc"
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: pyql-cluster
spec:
  clusterIP: "None"
  ports:
    - targetPort: 80
      port: 80
  selector:
    app: pyql-cluster
---
apiVersion: v1
kind: Service
metadata:
  name: pyql-cluster-lb
spec:
  type: NodePort
  ports:
    - targetPort: 80
      port: 80
  selector:
    app: pyql-cluster